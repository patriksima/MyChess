//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from PGN.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
public partial class PGNLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		WHITE_WINS=1, BLACK_WINS=2, DRAWN_GAME=3, REST_OF_LINE_COMMENT=4, BRACE_COMMENT=5, 
		ESCAPE=6, SPACES=7, STRING=8, INTEGER=9, PERIOD=10, ASTERISK=11, LEFT_BRACKET=12, 
		RIGHT_BRACKET=13, LEFT_PARENTHESIS=14, RIGHT_PARENTHESIS=15, LEFT_ANGLE_BRACKET=16, 
		RIGHT_ANGLE_BRACKET=17, NUMERIC_ANNOTATION_GLYPH=18, SYMBOL=19, SUFFIX_ANNOTATION=20, 
		UNEXPECTED_CHAR=21;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WHITE_WINS", "BLACK_WINS", "DRAWN_GAME", "REST_OF_LINE_COMMENT", "BRACE_COMMENT", 
		"ESCAPE", "SPACES", "STRING", "INTEGER", "PERIOD", "ASTERISK", "LEFT_BRACKET", 
		"RIGHT_BRACKET", "LEFT_PARENTHESIS", "RIGHT_PARENTHESIS", "LEFT_ANGLE_BRACKET", 
		"RIGHT_ANGLE_BRACKET", "NUMERIC_ANNOTATION_GLYPH", "SYMBOL", "SUFFIX_ANNOTATION", 
		"UNEXPECTED_CHAR"
	};


	public PGNLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public PGNLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'1-0'", "'0-1'", "'1/2-1/2'", null, null, null, null, null, null, 
		"'.'", "'*'", "'['", "']'", "'('", "')'", "'<'", "'>'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WHITE_WINS", "BLACK_WINS", "DRAWN_GAME", "REST_OF_LINE_COMMENT", 
		"BRACE_COMMENT", "ESCAPE", "SPACES", "STRING", "INTEGER", "PERIOD", "ASTERISK", 
		"LEFT_BRACKET", "RIGHT_BRACKET", "LEFT_PARENTHESIS", "RIGHT_PARENTHESIS", 
		"LEFT_ANGLE_BRACKET", "RIGHT_ANGLE_BRACKET", "NUMERIC_ANNOTATION_GLYPH", 
		"SYMBOL", "SUFFIX_ANNOTATION", "UNEXPECTED_CHAR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PGN.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static PGNLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x17', '\x96', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\a', '\x5', 
		'@', '\n', '\x5', '\f', '\x5', '\xE', '\x5', '\x43', '\v', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\a', '\x6', 'I', '\n', 
		'\x6', '\f', '\x6', '\xE', '\x6', 'L', '\v', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\a', '\a', 
		'T', '\n', '\a', '\f', '\a', '\xE', '\a', 'W', '\v', '\a', '\x3', '\a', 
		'\x3', '\a', '\x3', '\b', '\x6', '\b', '\\', '\n', '\b', '\r', '\b', '\xE', 
		'\b', ']', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\a', '\t', 'h', '\n', '\t', 
		'\f', '\t', '\xE', '\t', 'k', '\v', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\n', '\x6', '\n', 'p', '\n', '\n', '\r', '\n', '\xE', '\n', 'q', '\x3', 
		'\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x13', '\x3', '\x13', '\x6', '\x13', '\x86', '\n', '\x13', '\r', 
		'\x13', '\xE', '\x13', '\x87', '\x3', '\x14', '\x3', '\x14', '\a', '\x14', 
		'\x8C', '\n', '\x14', '\f', '\x14', '\xE', '\x14', '\x8F', '\v', '\x14', 
		'\x3', '\x15', '\x3', '\x15', '\x5', '\x15', '\x93', '\n', '\x15', '\x3', 
		'\x16', '\x3', '\x16', '\x2', '\x2', '\x17', '\x3', '\x3', '\x5', '\x4', 
		'\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', 
		'\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', 
		'\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', '%', 
		'\x14', '\'', '\x15', ')', '\x16', '+', '\x17', '\x3', '\x2', '\n', '\x4', 
		'\x2', '\f', '\f', '\xF', '\xF', '\x3', '\x2', '\x7F', '\x7F', '\x5', 
		'\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x4', '\x2', '$', '$', '^', 
		'^', '\x3', '\x2', '\x32', ';', '\x5', '\x2', '\x32', ';', '\x43', '\\', 
		'\x63', '|', '\n', '\x2', '%', '%', '-', '-', '/', '/', '\x32', '<', '?', 
		'?', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x4', '\x2', '#', '#', 
		'\x41', '\x41', '\x2', '\xA0', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', 
		'\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', 
		'\x3', '\x2', '\x2', '\x2', '\x3', '-', '\x3', '\x2', '\x2', '\x2', '\x5', 
		'\x31', '\x3', '\x2', '\x2', '\x2', '\a', '\x35', '\x3', '\x2', '\x2', 
		'\x2', '\t', '=', '\x3', '\x2', '\x2', '\x2', '\v', '\x46', '\x3', '\x2', 
		'\x2', '\x2', '\r', 'Q', '\x3', '\x2', '\x2', '\x2', '\xF', '[', '\x3', 
		'\x2', '\x2', '\x2', '\x11', '\x61', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'o', '\x3', '\x2', '\x2', '\x2', '\x15', 's', '\x3', '\x2', '\x2', '\x2', 
		'\x17', 'u', '\x3', '\x2', '\x2', '\x2', '\x19', 'w', '\x3', '\x2', '\x2', 
		'\x2', '\x1B', 'y', '\x3', '\x2', '\x2', '\x2', '\x1D', '{', '\x3', '\x2', 
		'\x2', '\x2', '\x1F', '}', '\x3', '\x2', '\x2', '\x2', '!', '\x7F', '\x3', 
		'\x2', '\x2', '\x2', '#', '\x81', '\x3', '\x2', '\x2', '\x2', '%', '\x83', 
		'\x3', '\x2', '\x2', '\x2', '\'', '\x89', '\x3', '\x2', '\x2', '\x2', 
		')', '\x90', '\x3', '\x2', '\x2', '\x2', '+', '\x94', '\x3', '\x2', '\x2', 
		'\x2', '-', '.', '\a', '\x33', '\x2', '\x2', '.', '/', '\a', '/', '\x2', 
		'\x2', '/', '\x30', '\a', '\x32', '\x2', '\x2', '\x30', '\x4', '\x3', 
		'\x2', '\x2', '\x2', '\x31', '\x32', '\a', '\x32', '\x2', '\x2', '\x32', 
		'\x33', '\a', '/', '\x2', '\x2', '\x33', '\x34', '\a', '\x33', '\x2', 
		'\x2', '\x34', '\x6', '\x3', '\x2', '\x2', '\x2', '\x35', '\x36', '\a', 
		'\x33', '\x2', '\x2', '\x36', '\x37', '\a', '\x31', '\x2', '\x2', '\x37', 
		'\x38', '\a', '\x34', '\x2', '\x2', '\x38', '\x39', '\a', '/', '\x2', 
		'\x2', '\x39', ':', '\a', '\x33', '\x2', '\x2', ':', ';', '\a', '\x31', 
		'\x2', '\x2', ';', '<', '\a', '\x34', '\x2', '\x2', '<', '\b', '\x3', 
		'\x2', '\x2', '\x2', '=', '\x41', '\a', '=', '\x2', '\x2', '>', '@', '\n', 
		'\x2', '\x2', '\x2', '?', '>', '\x3', '\x2', '\x2', '\x2', '@', '\x43', 
		'\x3', '\x2', '\x2', '\x2', '\x41', '?', '\x3', '\x2', '\x2', '\x2', '\x41', 
		'\x42', '\x3', '\x2', '\x2', '\x2', '\x42', '\x44', '\x3', '\x2', '\x2', 
		'\x2', '\x43', '\x41', '\x3', '\x2', '\x2', '\x2', '\x44', '\x45', '\b', 
		'\x5', '\x2', '\x2', '\x45', '\n', '\x3', '\x2', '\x2', '\x2', '\x46', 
		'J', '\a', '}', '\x2', '\x2', 'G', 'I', '\n', '\x3', '\x2', '\x2', 'H', 
		'G', '\x3', '\x2', '\x2', '\x2', 'I', 'L', '\x3', '\x2', '\x2', '\x2', 
		'J', 'H', '\x3', '\x2', '\x2', '\x2', 'J', 'K', '\x3', '\x2', '\x2', '\x2', 
		'K', 'M', '\x3', '\x2', '\x2', '\x2', 'L', 'J', '\x3', '\x2', '\x2', '\x2', 
		'M', 'N', '\a', '\x7F', '\x2', '\x2', 'N', 'O', '\x3', '\x2', '\x2', '\x2', 
		'O', 'P', '\b', '\x6', '\x2', '\x2', 'P', '\f', '\x3', '\x2', '\x2', '\x2', 
		'Q', 'U', '\a', '\'', '\x2', '\x2', 'R', 'T', '\n', '\x2', '\x2', '\x2', 
		'S', 'R', '\x3', '\x2', '\x2', '\x2', 'T', 'W', '\x3', '\x2', '\x2', '\x2', 
		'U', 'S', '\x3', '\x2', '\x2', '\x2', 'U', 'V', '\x3', '\x2', '\x2', '\x2', 
		'V', 'X', '\x3', '\x2', '\x2', '\x2', 'W', 'U', '\x3', '\x2', '\x2', '\x2', 
		'X', 'Y', '\b', '\a', '\x2', '\x2', 'Y', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'Z', '\\', '\t', '\x4', '\x2', '\x2', '[', 'Z', '\x3', '\x2', '\x2', '\x2', 
		'\\', ']', '\x3', '\x2', '\x2', '\x2', ']', '[', '\x3', '\x2', '\x2', 
		'\x2', ']', '^', '\x3', '\x2', '\x2', '\x2', '^', '_', '\x3', '\x2', '\x2', 
		'\x2', '_', '`', '\b', '\b', '\x2', '\x2', '`', '\x10', '\x3', '\x2', 
		'\x2', '\x2', '\x61', 'i', '\a', '$', '\x2', '\x2', '\x62', '\x63', '\a', 
		'^', '\x2', '\x2', '\x63', 'h', '\a', '^', '\x2', '\x2', '\x64', '\x65', 
		'\a', '^', '\x2', '\x2', '\x65', 'h', '\a', '$', '\x2', '\x2', '\x66', 
		'h', '\n', '\x5', '\x2', '\x2', 'g', '\x62', '\x3', '\x2', '\x2', '\x2', 
		'g', '\x64', '\x3', '\x2', '\x2', '\x2', 'g', '\x66', '\x3', '\x2', '\x2', 
		'\x2', 'h', 'k', '\x3', '\x2', '\x2', '\x2', 'i', 'g', '\x3', '\x2', '\x2', 
		'\x2', 'i', 'j', '\x3', '\x2', '\x2', '\x2', 'j', 'l', '\x3', '\x2', '\x2', 
		'\x2', 'k', 'i', '\x3', '\x2', '\x2', '\x2', 'l', 'm', '\a', '$', '\x2', 
		'\x2', 'm', '\x12', '\x3', '\x2', '\x2', '\x2', 'n', 'p', '\t', '\x6', 
		'\x2', '\x2', 'o', 'n', '\x3', '\x2', '\x2', '\x2', 'p', 'q', '\x3', '\x2', 
		'\x2', '\x2', 'q', 'o', '\x3', '\x2', '\x2', '\x2', 'q', 'r', '\x3', '\x2', 
		'\x2', '\x2', 'r', '\x14', '\x3', '\x2', '\x2', '\x2', 's', 't', '\a', 
		'\x30', '\x2', '\x2', 't', '\x16', '\x3', '\x2', '\x2', '\x2', 'u', 'v', 
		'\a', ',', '\x2', '\x2', 'v', '\x18', '\x3', '\x2', '\x2', '\x2', 'w', 
		'x', '\a', ']', '\x2', '\x2', 'x', '\x1A', '\x3', '\x2', '\x2', '\x2', 
		'y', 'z', '\a', '_', '\x2', '\x2', 'z', '\x1C', '\x3', '\x2', '\x2', '\x2', 
		'{', '|', '\a', '*', '\x2', '\x2', '|', '\x1E', '\x3', '\x2', '\x2', '\x2', 
		'}', '~', '\a', '+', '\x2', '\x2', '~', ' ', '\x3', '\x2', '\x2', '\x2', 
		'\x7F', '\x80', '\a', '>', '\x2', '\x2', '\x80', '\"', '\x3', '\x2', '\x2', 
		'\x2', '\x81', '\x82', '\a', '@', '\x2', '\x2', '\x82', '$', '\x3', '\x2', 
		'\x2', '\x2', '\x83', '\x85', '\a', '&', '\x2', '\x2', '\x84', '\x86', 
		'\t', '\x6', '\x2', '\x2', '\x85', '\x84', '\x3', '\x2', '\x2', '\x2', 
		'\x86', '\x87', '\x3', '\x2', '\x2', '\x2', '\x87', '\x85', '\x3', '\x2', 
		'\x2', '\x2', '\x87', '\x88', '\x3', '\x2', '\x2', '\x2', '\x88', '&', 
		'\x3', '\x2', '\x2', '\x2', '\x89', '\x8D', '\t', '\a', '\x2', '\x2', 
		'\x8A', '\x8C', '\t', '\b', '\x2', '\x2', '\x8B', '\x8A', '\x3', '\x2', 
		'\x2', '\x2', '\x8C', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x8D', '\x8B', 
		'\x3', '\x2', '\x2', '\x2', '\x8D', '\x8E', '\x3', '\x2', '\x2', '\x2', 
		'\x8E', '(', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x8D', '\x3', '\x2', 
		'\x2', '\x2', '\x90', '\x92', '\t', '\t', '\x2', '\x2', '\x91', '\x93', 
		'\t', '\t', '\x2', '\x2', '\x92', '\x91', '\x3', '\x2', '\x2', '\x2', 
		'\x92', '\x93', '\x3', '\x2', '\x2', '\x2', '\x93', '*', '\x3', '\x2', 
		'\x2', '\x2', '\x94', '\x95', '\v', '\x2', '\x2', '\x2', '\x95', ',', 
		'\x3', '\x2', '\x2', '\x2', '\r', '\x2', '\x41', 'J', 'U', ']', 'g', 'i', 
		'q', '\x87', '\x8D', '\x92', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
